(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    210394,       4313]
NotebookOptionsPosition[    209096,       4268]
NotebookOutlinePosition[    209449,       4284]
CellTagsIndexPosition[    209406,       4281]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
(* Jose Dario Sanchez *)
(* josedario@ucla.edu *)
(* ID: 004-505-398 *)
(* HOMEWORK TWO (2) *)
\
\>", "Text",
 CellChangeTimes->{{3.632162795891984*^9, 3.6321628039470043`*^9}, {
  3.6350079515123777`*^9, 3.6350079948831873`*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{" ", "1", ")"}], " ", "Solve", " ", "the", " ", "following", " ",
      "for", " ", "x", 
     RowBox[{"(", "t", ")"}]}], ":", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"x", "''"}], "[", "t", "]"}]}], ",", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "Vo"}], ",", " ", 
   RowBox[{
    RowBox[{"x", "[", "0", "]"}], "\[Equal]", "Xo"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.632601179858918*^9, 3.632601270424568*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"solution1A", "=", 
   RowBox[{"DSolveValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"x", "''"}], "[", "t", "]"}], "\[Equal]", "a"}], ",", 
       RowBox[{
        RowBox[{"x", "[", "0", "]"}], "\[Equal]", "Xo"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "Vo"}]}], "}"}], 
     ",", 
     RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", "solution1A"}], "Input",
 CellChangeTimes->{{3.632162561310266*^9, 3.632162561311698*^9}, {
  3.635437530490118*^9, 3.6354375429683313`*^9}, {3.6354375848061047`*^9, 
  3.635437638892331*^9}, {3.6354380138536*^9, 3.635438017498024*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"a", " ", 
     SuperscriptBox["t", "2"]}], "+", 
    RowBox[{"2", " ", "t", " ", "Vo"}], "+", 
    RowBox[{"2", " ", "Xo"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.635437598930997*^9, 3.6354376396472*^9}, {
  3.635438014660428*^9, 3.635438018016532*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{" ", "2", ")"}], " ", "Solve", " ", "the", " ", "following", 
      " ", "for", " ", "x1", 
      RowBox[{"(", "t", ")"}], " ", "and", " ", "x2", 
      RowBox[{"(", "t", ")"}]}], ":", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "''"}], "[", "t", "]"}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"k", "/", "m"}], ")"}], "*", 
        RowBox[{"x", "[", "t", "]"}]}]}], "==", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"k", "/", "m"}], ")"}], "*", 
       RowBox[{"y", "[", "t", "]"}]}]}]}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"y", "''"}], "[", "t", "]"}], "+", 
      RowBox[{"2", "*", 
       RowBox[{"(", 
        RowBox[{"k", "/", "m"}], ")"}], "*", 
       RowBox[{"x", "[", "t", "]"}]}]}], "\[Equal]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"k", "/", "m"}], ")"}], "*", 
      RowBox[{"x", "[", "t", "]"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "'"}], "[", "0", "]"}], "==", "0"}], ",", " ", 
    RowBox[{
     RowBox[{"y", "[", "0", "]"}], "\[Equal]", "a"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.632601330809615*^9, 3.63260140214752*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"diffEq2A", "=", 
   RowBox[{
    RowBox[{"DSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "''"}], "[", "t", "]"}], "+", 
          RowBox[{"2", "*", 
           RowBox[{"(", 
            RowBox[{"k", "/", "m"}], ")"}], "*", 
           RowBox[{"x", "[", "t", "]"}]}]}], "==", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"k", "/", "m"}], ")"}], "*", 
          RowBox[{"y", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"y", "''"}], "[", "t", "]"}], "+", 
          RowBox[{"2", "*", 
           RowBox[{"(", 
            RowBox[{"k", "/", "m"}], ")"}], "*", 
           RowBox[{"x", "[", "t", "]"}]}]}], "\[Equal]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"k", "/", "m"}], ")"}], "*", 
          RowBox[{"x", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "'"}], "[", "0", "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{"y", "[", "0", "]"}], "\[Equal]", "a"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], ",", 
        RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", "t"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"solution2A", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], "/.", "diffEq2A"}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"solution2B", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "t", "]"}], "/.", "diffEq2A"}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.632163107964448*^9, 3.632163182665786*^9}, {
   3.6321632673469276`*^9, 3.6321633653524647`*^9}, {3.63216342051005*^9, 
   3.632163439470552*^9}, {3.632163586324193*^9, 3.632163611310268*^9}, {
   3.632163647287752*^9, 3.632163707859872*^9}, {3.6321637413942757`*^9, 
   3.632163755063489*^9}, {3.6321638313987837`*^9, 3.632163886385942*^9}, {
   3.63216394578651*^9, 3.632163948566918*^9}, {3.63216400671929*^9, 
   3.632164011237419*^9}, 3.632164120966028*^9, 3.632164301684267*^9, {
   3.6321643323010283`*^9, 3.632164419612399*^9}, {3.63216452960854*^9, 
   3.6321645754828033`*^9}, {3.6321654048425703`*^9, 
   3.6321654295395117`*^9}, {3.632165487002605*^9, 3.6321655246515207`*^9}, 
   3.635437577177052*^9, {3.635437614137404*^9, 3.6354376147025547`*^9}, {
   3.635437645302969*^9, 3.635437800537298*^9}, {3.6354378321775017`*^9, 
   3.635437997956192*^9}, {3.635438059845517*^9, 3.635438064710476*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData[
 FractionBox[
  RowBox[{"a", " ", 
   SqrtBox["k"], " ", "t", " ", 
   RowBox[{"Sin", "[", 
    FractionBox[
     RowBox[{
      SqrtBox["k"], " ", "t"}], 
     SqrtBox["m"]], "]"}]}], 
  RowBox[{"2", " ", 
   SqrtBox["m"]}]]], "Output",
 CellChangeTimes->{{3.63543789576396*^9, 3.635437998616354*^9}, 
   3.635438065611978*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", " ", 
   RowBox[{"Cos", "[", 
    FractionBox[
     RowBox[{
      SqrtBox["k"], " ", "t"}], 
     SqrtBox["m"]], "]"}]}], "+", 
  FractionBox[
   RowBox[{"a", " ", 
    SqrtBox["k"], " ", "t", " ", 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{
       SqrtBox["k"], " ", "t"}], 
      SqrtBox["m"]], "]"}]}], 
   RowBox[{"2", " ", 
    SqrtBox["m"]}]]}]], "Output",
 CellChangeTimes->{{3.63543789576396*^9, 3.635437998616354*^9}, 
   3.6354380660918503`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{" ", "3", ")"}], " ", "Starting", " ", "with", " ", "equations", 
    " ", 
    RowBox[{"(", "2.40", ")"}]}], ",", 
   RowBox[{"(", "2.41", ")"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", ",", "42"}], ")"}], " ", "in", " ", "Marion", " ", 
    "Example", " ", "2.7"}], ",", 
   RowBox[{
    RowBox[{
    "reproduce", " ", "the", " ", "plot", " ", "shown", " ", "in", " ", 
     "Figure", " ", "2"}], "-", 
    RowBox[{"8", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"label", " ", "this"}], ",", 
       RowBox[{"and", " ", "all", " ", "other", " ", 
        RowBox[{"plots", "!"}]}]}], ")"}]}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.632601435180396*^9, 3.632601438369184*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"diffEq3A", "=", 
   RowBox[{"DSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"m", "*", 
          RowBox[{
           RowBox[{"x", "''"}], "[", "t", "]"}]}], "+", 
         RowBox[{"k", "*", "m", "*", 
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}]}]}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"(", "Vo", ")"}], "*", 
         RowBox[{"Cos", "[", "theta", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
     RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"diffEq3B", "=", 
   RowBox[{"DSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"m", "*", 
          RowBox[{
           RowBox[{"y", "''"}], "[", "t", "]"}]}], "+", 
         RowBox[{"k", "*", "m", "*", 
          RowBox[{
           RowBox[{"y", "'"}], "[", "t", "]"}]}], "+", 
         RowBox[{"m", "*", "g"}]}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"(", "Vo", ")"}], "*", 
         RowBox[{"Sin", "[", "theta", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"y", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
     RowBox[{"y", "[", "t", "]"}], ",", "t"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solution2A", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], "/.", "diffEq3A"}], "//", 
    "FullSimplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solution2B", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"y", "[", "t", "]"}], "/.", "diffEq3B"}], "//", 
    "FullSimplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solution2C", "=", 
   RowBox[{"solution2A", "/.", 
    RowBox[{"t", "\[Rule]", 
     RowBox[{"t", "[", "x", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"t", "[", "x", "]"}], "=", 
   RowBox[{
    RowBox[{"Normal", "[", 
     RowBox[{"DSolveValue", "[", 
      RowBox[{
       RowBox[{"x", "==", "solution2C"}], ",", 
       RowBox[{"t", "[", "x", "]"}], ",", "x"}], "]"}], "]"}], "//", 
    "FullSimplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solution2D", "=", 
   RowBox[{"solution2B", "/.", 
    RowBox[{"t", "\[Rule]", 
     RowBox[{"t", "[", "x", "]"}]}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", "9.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vo", "=", "600"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"theta", "=", 
    RowBox[{"Pi", "/", "3"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k1", "=", "0.08"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k2", "=", "0.04"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k3", "=", "0.02"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k4", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k5", "=", "0.005"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"k6", "=", "0.000001"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotFunction1", "=", 
   RowBox[{"solution2D", "/.", 
    RowBox[{"k", "\[Rule]", "k1"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotFunction2", "=", 
   RowBox[{"solution2D", "/.", 
    RowBox[{"k", "\[Rule]", "k2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotFunction3", "=", 
   RowBox[{"solution2D", "/.", 
    RowBox[{"k", "\[Rule]", "k3"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotFunction4", "=", 
   RowBox[{"solution2D", "/.", 
    RowBox[{"k", "\[Rule]", "k4"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotFunction5", "=", 
   RowBox[{"solution2D", "/.", 
    RowBox[{"k", "\[Rule]", "k5"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotFunction6", "=", 
    RowBox[{"solution2D", "/.", 
     RowBox[{"k", "\[Rule]", "k6"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "plotFunction1", ",", "plotFunction2", ",", "plotFunction3", ",", 
      "plotFunction4", ",", "plotFunction5", ",", "plotFunction6"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "35000"}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<k=0.08\>\"", ",", "\"\<k=0.04\>\"", ",", "\"\<k=0.02\>\"", ",", 
       "\"\<k=0.01\>\"", ",", "\"\<k=0.005\>\"", ",", "\"\<k=0.000001\>\""}], 
      "}"}]}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.632170070596055*^9, 3.632170070597765*^9}, {
   3.632170197694644*^9, 3.632170205408867*^9}, {3.632170317622106*^9, 
   3.632170326598604*^9}, {3.6321703651907988`*^9, 3.6321705578689623`*^9}, {
   3.6321705903477793`*^9, 3.632170594016656*^9}, {3.632170656472947*^9, 
   3.632170738513596*^9}, 3.632171697167944*^9, {3.632172530054681*^9, 
   3.632172600782998*^9}, {3.632172643725625*^9, 3.6321726532781754`*^9}, {
   3.63217268842612*^9, 3.632172702457575*^9}, {3.632173134445901*^9, 
   3.632173188629264*^9}, {3.635438050812488*^9, 3.635438118480309*^9}, {
   3.63543821754416*^9, 3.63543832176433*^9}, {3.6354383630444183`*^9, 
   3.635438424313065*^9}, {3.63543846794967*^9, 3.6354384963993063`*^9}, {
   3.635438535832987*^9, 3.635438610214856*^9}, {3.635438663493526*^9, 
   3.635438724297872*^9}, {3.6354387953781357`*^9, 3.6354388618299932`*^9}, {
   3.635438918558771*^9, 3.635438930819868*^9}, {3.635439006668415*^9, 
   3.6354390087378693`*^9}, {3.635439078929908*^9, 3.635439243796232*^9}, {
   3.635439286813409*^9, 3.635439508737246*^9}, {3.635439576047289*^9, 
   3.6354395794518538`*^9}, {3.6354396387499123`*^9, 3.635439732856443*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \
\[NoBreak]\\!\\(Solve\\)\[NoBreak], so some solutions may not be found; use \
Reduce for complete solution information. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", ButtonNote -> \
\\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.635438279513775*^9, 3.635438313155209*^9}, 
   3.635438497711132*^9, {3.635438536974657*^9, 3.6354385513314667`*^9}, {
   3.635438605492877*^9, 3.635438610894948*^9}, {3.635438676651491*^9, 
   3.635438725776843*^9}, {3.63543884197033*^9, 3.635438863353133*^9}, 
   3.635438926439158*^9, {3.6354392018253527`*^9, 3.635439226162805*^9}, 
   3.6354392720051537`*^9, {3.6354394902451344`*^9, 3.635439510323304*^9}, 
   3.6354395814349747`*^9, {3.635439722842359*^9, 3.635439734869725*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  FractionBox[
   RowBox[{"g", "+", 
    RowBox[{"g", " ", 
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"k", " ", "x", " ", 
         RowBox[{"Sec", "[", "theta", "]"}]}], "Vo"]}], "]"}]}], "+", 
    RowBox[{"k", " ", "Vo", " ", 
     RowBox[{"Sin", "[", "theta", "]"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"k", " ", "x", " ", 
         RowBox[{"Sec", "[", "theta", "]"}]}], "Vo"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"g", "+", 
       RowBox[{"k", " ", "Vo", " ", 
        RowBox[{"Sin", "[", "theta", "]"}]}]}], ")"}]}]}], 
   SuperscriptBox["k", "2"]], "}"}]], "Output",
 CellChangeTimes->{{3.635439201832024*^9, 3.6354392261711082`*^9}, 
   3.635439272124955*^9, {3.635439490385057*^9, 3.635439510457293*^9}, 
   3.63543958157631*^9, {3.635439722983775*^9, 3.635439735000285*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
8f1+xCKbMriwV8d7Dr2i/wfPp0EK
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
M0rWbYJ92Nbr7qPd1P8B0fKAfA==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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

        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
sA8=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV13c8Vf8fB3ArGqJBhWgQfTPapRSvSGQkMhMpUZSUUSqUkQZRUUkoIoWU
MrNulHvvcaeRjLgyIpRISuT3+f11H8/HOed+3ucz3u/3WXbY28pNREhISEpY
SOj/v7nPNnS1HjXSSzHYekPwVV/P+8z9a4cDVuDtIllZh7vrIJ7TXrw+YCNS
NYzEs+L0wWeKWC0OMMQHW1etPbesUGgnkzwnwAZnlI9f+Xz9MDKVFN/NDHCD
sMVpbbFgHyiHLmuUCPDHuGJO9J4joRC8fuwiHnAZ556u8elbcxuSErv81Q/e
xeok0Zj0S6lwV5dK8U1+hLt5ufw1rZm43isjMmM4Ha461QmV+3LRoC9purY4
CyNp39fRrPOhbTeexY9+iRRpKZEHLUVIaHFXrT//Gl//3WSf8y1F8qplzusc
CnAi7G21WUUFTEXqz24UL8ZurWcPS/e8ReTKi9NEBkuQuldUrb+iEn6Ny/19
U8sR1OVf6jdZhUsrZ1ouTafhYOry3TYK7xEjeTGlX7YS9xfI5khurMbIhqHD
M05WwdH8pd76ZXQ8Cndqm9X5DmPTlhVJijGQXHxae5tlNSwsx+13vWcg7G+S
wW3baqjXW39ppzNwbDu1p9exGmliAyIBFAPr3y53i3Ovxu9FVqOpXAYYjLpb
AxeqETBL2a2niYGRxo39iU+qERyplrj0GwPGv/4kTf6txt6f4b5HZJn4sS5U
tOIJHVM9tm0rDzLh53Y35Wo2HUOJOog6xMSve5l6Vq+IZ2/7N+jKxPhE7YXu
MjomhAfbs44xIUZX/jmrgVz/dWLBXB8mFjm+77IXZcBk9H5/SDgTCJtePXyQ
gXrbK20TGUxU5i8+UurGANPatlAlkwnD3jUiEccZmNUXzzDJZsLE3EFX7iwD
DmWvlG+9ZMJ6YWaBXjQD0ba+mySKmTiaZZoRVcqAzO03EglMJqLroq+qyjHh
VHLlvX0fE8vH3E/dUGJiyiFrk0o/EwXyevY/lcl77owoGBxg4tOh72qVWkyw
0yZ1AoeY0BiyoDvtZCK4yKbr8hgTlORc8TveTIhofewwmUZBfFdsmGg1E3//
5OkmLqGQ4HH8uGcNExHWax6uX0ZB64bBPj6PiaLeIRXmcgo29SPLH7YwYTVR
nv19BYW0w9aVW38wkV6+7eNKDQr6F2WFfRZTiLvssddcm8LFonvBAh8Kw6ae
qU4WFF6y7P68CaBgaFgX27aXgkCw0O9OMIW7D64EOFmR52fEe5hcp+Bq8jnW
xobEtz/eOi+FwuYj7x5rOVKI/hu/6iqPgs4X/qHL7hQSdRM+rNaqQarAdbLq
AgW21X7LmRtqkJKgzJYIovDPXZ7VtaUGnywendtNxnGJSXh737AG8bOeWtIv
UVARJGSLOtUgrfDEj6zLFLJCHoQ2RtZgt5RMqlwMhTfvErUu9tWgI7LhQMQj
Cpf8Gl10v9egf46i4lUS1y6VebGTP2vwIm1i2tVUCnVhV8YuCLEwFhZmGZpG
YUDfhxawkAXbm59nHHpKQfGtkZWPIQs1462t719Q6DoVGr7WlIVmz0eqmS8p
ZC4tKxjay4Jr1Hh8VC6FTZfWKXgfYCH175kx09cU9ugpdh33ZcHAtqIhr4DE
Uzbs75bCwrsXmou0ykg8XppPVTJYuHzUo/8nsaTisebObBbUDbd9KS6ncD/w
k+7hIha2FD2z16VReKXDkDjIZYFrXHtgbRWFzuKk+/aTLNSmWtLLGSQej481
C0XZEDcUUznGpHBKbv6/D9PZyI83fyZNUZgIuHrYRoaNKakMTYcaCjLavupW
6mzwjZ/YfWCTeAqMy0wd2JijzJodUEtByc5oy1NnNq5seJ80Tjw6ZpgvdoQN
R1fxzAt1ZD9tMXhedpINmut/nwLqKYiUbU9aHc5G37MSJZcPFJqdtslFXWNj
rl97UQNx7r+td3qjyfi33Vp3N5L1hfaNlPtsbKSXhGh+pFBetS5o/gs2Sixm
HOloIvvsyNo/3nlsaGVvcDdppuA1bY0/q5gNTlh3bC7xYiNNr8vv2Fgxd1/w
hRYK5yk1p7EmNo7M99OaaCXrwV+8vUWMgxvGbXtftlOQ8lEo3jyTg63Rz3Om
iLvnyW+Mk+agUvOpo7mAnAPrhZrm8hz8M+2d30U83DhXsWI1B3rTxBf/66BA
Bcy5r7CRA5PP6Rn4TCFFTlo2YCsHOZaUcwjxXkfJ2WsNOejepnjgH3FOm/hk
6n4Oolgz13V3Uoi4OO3c1EEONrQP1Mt3UXBaKjbq6MaBu+qCn3uIJQ8LD8qc
4iDcbob5K+IuESGP0/4cfD+n4dpBXPL4Xxf7PLk/frucdDcFz+6/rRGXOeh0
EX7kRqwfMW7feZ2DxrAdV6KJ5dT+1Ovd5CBd6HlZPjHj2C/W7wQO3kmwr04R
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
Cmn/AzMVtQE=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 35000}, {-31689.524245612633`, 13775.02156167231}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"k=0.08\"", "\"k=0.04\"", "\"k=0.02\"", "\"k=0.01\"", "\"k=0.005\"", 
       "\"k=0.000001\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.635439201832024*^9, 3.6354392261711082`*^9}, 
   3.635439272124955*^9, {3.635439490385057*^9, 3.635439510457293*^9}, 
   3.63543958157631*^9, {3.635439722983775*^9, 3.63543973524046*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{" ", "4", ")"}], "\n", "\[Dash]", "a"}], ")"}], 
                    " ", "Define", " ", "the", " ", "following", " ", 
                    RowBox[{"function", ":", 
                    RowBox[{"osc", 
                    RowBox[{"(", "t", ")"}]}]}]}], "=", 
                    RowBox[{
                    RowBox[{"x\:0308", 
                    RowBox[{"(", "t", ")"}]}], "+", 
                    RowBox[{"2", "\[Beta]x\:0307", 
                    RowBox[{"(", "t", ")"}]}], "+", 
                    RowBox[{"\[Omega]2x", 
                    RowBox[{"(", "t", ")"}]}]}]}], "\n", "\[Dash]", "b"}], 
                    ")"}], " ", "Solve", " ", "the", " ", "differential", " ",
                     "equation", " ", "osc", 
                    RowBox[{"(", "t", ")"}]}], "=", 
                   RowBox[{
                    RowBox[{"0", " ", "for", " ", "x", 
                    RowBox[{"(", "t", ")"}], " ", "subject", " ", "to", " ", 
                    "the", "\n", "initial", " ", "conditions", " ", "x\:0307", 
                    RowBox[{"(", "0", ")"}]}], "=", 
                    RowBox[{
                    RowBox[{"0", " ", "and", " ", "x", 
                    RowBox[{"(", "0", ")"}]}], "=", "1"}]}]}], "\n", 
                  "\[Dash]", "c"}], ")"}], "Plot", " ", "x", 
                RowBox[{"(", "t", ")"}], "fromt"}], "=", 
               RowBox[{
                RowBox[{"0", " ", "to", " ", "t"}], "=", 
                RowBox[{"5", " ", "for", " ", "the", " ", "following", " ", 
                 RowBox[{"cases", ":", " ", "i"}]}]}]}], ")"}], "\[Omega]"}], 
            "=", 
            RowBox[{"2", "\[Pi]"}]}], ",", 
           RowBox[{"\[Beta]", "=", 
            RowBox[{"0", " ", "ii"}]}]}], ")"}], "\[Omega]"}], "=", 
        RowBox[{"2", "\[Pi]"}]}], ",", 
       RowBox[{"\[Beta]", "=", 
        RowBox[{"4", "\[Pi]"}]}], ",", 
       RowBox[{"and", " ", "iii"}]}], ")"}], "\[Omega]"}], "=", 
    RowBox[{"2", "\[Pi]"}]}], ",", 
   RowBox[{"b", "=", 
    RowBox[{"2", 
     RowBox[{"\[Pi]", ".", " ", "Discuss"}], " ", "the", " ", "significance", 
     " ", "of", " ", "each", " ", 
     RowBox[{"case", "."}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.632601566977252*^9, 3.6326016687924013`*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"osc", "[", "t", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "''"}], "[", "t", "]"}], "+", 
    RowBox[{"2", "*", "B", "*", 
     RowBox[{
      RowBox[{"x", "'"}], "[", "t", "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"w", "^", "2"}], ")"}], 
     RowBox[{"x", "[", "t", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], "=", 
    RowBox[{
     RowBox[{"DSolveValue", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"osc", "[", "t", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
       RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}], "//", 
     "FullSimplify"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fun1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], "/.", 
     RowBox[{"w", "\[Rule]", 
      RowBox[{"2", "*", "Pi"}]}]}], "/.", 
    RowBox[{"B", "\[Rule]", "0"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fun2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], "/.", 
     RowBox[{"w", "\[Rule]", 
      RowBox[{"2", "*", "Pi"}]}]}], "/.", 
    RowBox[{"B", "\[Rule]", 
     RowBox[{"4", "*", "Pi"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fun3", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], "/.", 
      RowBox[{"w", "\[Rule]", 
       RowBox[{"2", "*", "Pi"}]}]}], "/.", 
     RowBox[{"B", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "*", "Pi"}], "+", "0.000001"}], ")"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Evaluate", "[", "fun1", "]"}], ",", "fun2", ",", "fun3"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "5"}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<case i\>\"", ",", "\"\<case ii\>\"", ",", "\"\<case iii\>\""}], 
      "}"}]}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.632240201280119*^9, 3.632240358232609*^9}, {
  3.632240739929785*^9, 3.6322407755223627`*^9}, {3.6322411077099323`*^9, 
  3.632241165578601*^9}, {3.632241763550288*^9, 3.632241792812284*^9}, {
  3.635439775440831*^9, 3.635440256299801*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
dTOG/98v9V/GX8cz
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
k6S85Kup4n/Pp/01
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
UTZ3ZGVrixubVEQq2o3cJP4HRJAJEw==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 5}, {-0.9999981795509454, 0.9999999999997945}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"case i\"", "\"case ii\"", "\"case iii\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.632240750920336*^9, 3.632240790484021*^9, {3.632241080996756*^9, 
   3.632241108831856*^9}, {3.632241142149951*^9, 3.632241166074449*^9}, 
   3.6322412075020227`*^9, {3.632241765142312*^9, 3.632241793396678*^9}, 
   3.6354398136734257`*^9, 3.635439847809854*^9, 3.635440089077405*^9, 
   3.635440122137681*^9, {3.635440173240888*^9, 3.635440217883275*^9}, {
   3.635440248319374*^9, 3.635440261275394*^9}},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Comments", ":", " ", 
    RowBox[{"First", " ", "graph", " ", 
     RowBox[{"(", 
      RowBox[{"in", " ", "the", " ", "blue"}], ")"}], " ", "represents", " ", 
     "undamped", " ", 
     RowBox[{"motion", ".", " ", "The"}], " ", "amplitude", " ", "of", " ", 
     "the", " ", "oscillating", " ", "cosine", " ", "wave", " ", "does", " ", 
     "not", " ", "decrease", " ", "as", " ", "t", " ", "approaches", " ", 
     RowBox[{"infinity", ".", " ", "The"}], " ", "second", " ", "graph", " ", 
     
     RowBox[{"(", 
      RowBox[{"in", " ", "the", " ", "yellow"}], ")"}], " ", "represents", 
     " ", "overdamped", " ", "motion", " ", "in", " ", "that", " ", "it", " ",
      "does", " ", "dissipate", " ", "over", " ", "time"}]}], ",", " ", 
   RowBox[{
   "but", " ", "much", " ", "more", " ", "slowly", " ", "than", " ", "the", 
    " ", "dissipation", " ", "occuring", " ", "in", " ", "critically", " ", 
    "damped", " ", "motion", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"seen", " ", "in", " ", "the", " ", "green", " ", "line"}], 
      ")"}], ".", " ", "Overdamped"}], " ", "motion", " ", "has", " ", "an", 
    " ", "opposing", " ", "drag", " ", "force", " ", "slowing", " ", "down", 
    " ", "the", " ", "function", " ", "from", " ", "reaching", " ", "the", 
    " ", "x", " ", 
    RowBox[{"axis", ".", " ", "Critically"}], " ", "damped", " ", "has", " ", 
    "just", " ", "enough", " ", "opposition", " ", "to", " ", "keep", " ", 
    "it", " ", "from", " ", "overshooting", " ", "and", " ", "completing", 
    " ", "an", " ", "oscillation", " ", "to", " ", "reach", " ", "the", " ", 
    "x", " ", "axis", " ", "as", " ", "quickly", " ", "as", " ", 
    RowBox[{"possible", "."}]}]}]}]], "Input",
 CellChangeTimes->{{3.632602415679545*^9, 3.632602510266962*^9}, {
  3.63260278357707*^9, 3.6326028434530888`*^9}, {3.632602900786968*^9, 
  3.63260306654696*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{" ", "5", ")"}], " ", "Marion", " ", "3"}], "-", 
       RowBox[{
       "35.", " ", "Not", " ", "as", " ", "bad", " ", "as", " ", "it", " ", 
        RowBox[{"looks", ".", " ", "There"}], " ", "are", " ", "really", " ", 
        "only", " ", "two", " ", "temporal", " ", "intervals"}]}], ",", 
      RowBox[{
      "and", " ", "Mathematica", " ", "is", " ", "going", " ", "to", " ", 
       "do", " ", "the", " ", "hardest", " ", "parts", " ", "for", " ", 
       RowBox[{"you", ".", " ", "Solve"}], " ", "the", " ", "first", " ", 
       "temporal", " ", "interval", " ", "as", " ", "a", " ", "driven", " ", 
       "oscillator"}], ",", 
      RowBox[{
      "and", " ", "use", " ", "the", " ", "relevant", " ", "values", " ", 
       "at", " ", "the", " ", "end", " ", "of", " ", "that", " ", "interval", 
       " ", "as", " ", "initial", " ", "conditions", " ", "for", " ", "the", 
       " ", "next", " ", 
       RowBox[{"interval", ".", " ", "When"}], " ", "you"}]}], 
     "\[CloseCurlyQuote]"}], "re", " ", "done"}], ",", " ", 
   RowBox[{
    RowBox[{"take", " ", "\[Beta]"}], "=", 
    RowBox[{"\[Pi]", "/", "2"}]}], ",", " ", 
   RowBox[{"\[Omega]", "=", 
    RowBox[{"\[Omega]0", "=", 
     RowBox[{
      RowBox[{"2", "\[Pi]", " ", "and", " ", "a"}], "=", "1"}]}]}], ",", 
   RowBox[{
    RowBox[{"and", " ", 
     RowBox[{"(", 
      RowBox[{"on", " ", "one", " ", "plot"}], ")"}], " ", "plot", " ", "x", 
     RowBox[{"(", "t", ")"}], " ", "over", " ", "the", " ", "range", " ", 
     "0"}], "<", "t", "<", 
    RowBox[{"8", 
     RowBox[{"\[Pi]", "/", 
      RowBox[{"\[Omega]0", ".", " ", 
       RowBox[{"Hint", ":", 
        RowBox[{
         RowBox[{"Show", "[", 
          RowBox[{".", " ", ".", " ", "."}], "]"}], "."}]}]}]}]}]}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.632601996297063*^9, 3.632602049101453*^9}, {
   3.632602274019746*^9, 3.632602335265987*^9}, 3.632603178640319*^9},
 Background->RGBColor[1, 1, 0.85]],

Cell[BoxData[{
 RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x1", "=", 
   RowBox[{
    RowBox[{"DSolveValue", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "''"}], "[", "t", "]"}], "+", 
          RowBox[{"2", "*", "B", "*", 
           RowBox[{
            RowBox[{"x", "'"}], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{
            RowBox[{"(", "w", ")"}], "^", "2"}], 
           RowBox[{"x", "[", "t", "]"}]}]}], "\[Equal]", 
         RowBox[{
          RowBox[{"(", "a", ")"}], "*", 
          RowBox[{"Sin", "[", 
           RowBox[{"w", "*", "t"}], "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], 
      ",", 
      RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}], "//", 
    "FullSimplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"x1", ",", "t"}], "]"}], "//", "FullSimplify"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x2", "=", 
   RowBox[{
    RowBox[{"DSolveValue", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "''"}], "[", "t", "]"}], "+", 
         RowBox[{"2", "*", "B", "*", 
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"(", "w", ")"}], "^", "2"}], 
          RowBox[{"x", "[", "t", "]"}]}]}], "\[Equal]", "0"}], "}"}], ",", 
      RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}], "//", 
    "FullSimplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x3", "=", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"x2", "[", "t", "]"}], ",", "t"}], "]"}], "//", 
     "FullSimplify"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"t", "=", 
    RowBox[{"Pi", "/", "w"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"x1", "\[Equal]", "x2"}], ",", 
     RowBox[{"C", "[", "1", "]"}]}], "]"}], "//", "FullSimplify"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"x", "''"}], "[", "t", "]"}], "+", 
        RowBox[{"2", "*", "B", "*", 
         RowBox[{
          RowBox[{"x", "'"}], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{
          RowBox[{"(", "w", ")"}], "^", "2"}], 
         RowBox[{"x", "[", "t", "]"}]}]}], "\[Equal]", "0"}], "}"}], ",", 
     RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}], "//", "FullSimplify"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.632250327654386*^9, {3.632250456808732*^9, 3.632250600579158*^9}, {
   3.632250636902487*^9, 3.632250652311434*^9}, 3.632250733145337*^9, {
   3.635440292253909*^9, 3.635440385167976*^9}, {3.6354404217133207`*^9, 
   3.635440481661147*^9}, {3.635440544846346*^9, 3.63544060960388*^9}, {
   3.635440645739587*^9, 3.635440674299597*^9}, {3.635440719490201*^9, 
   3.6354407204334707`*^9}, {3.635440820270859*^9, 3.635440821757164*^9}, {
   3.635440867540354*^9, 3.635441075662438*^9}, {3.6354411112718973`*^9, 
   3.635441149836439*^9}, {3.635441232708789*^9, 3.6354412329489117`*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Apologies", "!"}], " ", "This", " ", "block", " ", "is", " ", 
     "lots", " ", "of", " ", "disorganized", " ", "math", " ", "I", " ", 
     RowBox[{"didn", "'"}], "t", " ", "know", " ", "how", " ", "to", " ", 
     "do", " ", "any", " ", "better", " ", "when", " ", "I", " ", "made", " ", 
     RowBox[{"this", "!"}]}], " ", "*)"}],
   FontSize->14], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"a", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"t", " ", "w"}], "]"}], "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "B"}], " ", "t"}]], " ", "w", " ", 
              RowBox[{"Sinh", "[", 
               RowBox[{"t", " ", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox["B", "2"], "-", 
                  SuperscriptBox["w", "2"]}]]}], "]"}]}], 
             SqrtBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"B", "-", "w"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"B", "+", "w"}], ")"}]}]]]}], ")"}]}], 
         RowBox[{"2", " ", "B"}]], "==", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "t"}], " ", 
           RowBox[{"(", 
            RowBox[{"B", "+", 
             SqrtBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"B", "-", "w"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"B", "+", "w"}], ")"}]}]]}], ")"}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"B", "-", "w"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"B", "+", "w"}], ")"}]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"C", "[", "1", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", "t", " ", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox["B", "2"], "-", 
                   SuperscriptBox["w", "2"]}]]}]], " ", 
               RowBox[{"C", "[", "2", "]"}]}]}], ")"}]}], "-", 
           RowBox[{"B", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"C", "[", "1", "]"}], "+", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", "t", " ", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox["B", "2"], "-", 
                   SuperscriptBox["w", "2"]}]]}]], " ", 
               RowBox[{"C", "[", "2", "]"}]}]}], ")"}]}]}], ")"}]}]}], ",", 
       RowBox[{"C", "[", "2", "]"}]}], "]"}], "//", "FullSimplify"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "==", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"4", " ", "B", " ", "w"}]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[ExponentialE]", 
                FractionBox[
                 RowBox[{"\[Pi]", " ", 
                  RowBox[{"(", 
                   RowBox[{"B", "+", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"B", "-", "w"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"B", "+", "w"}], ")"}]}]]}], ")"}]}], "w"]]}], 
              "-", 
              FractionBox["B", 
               SqrtBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"B", "-", "w"}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"B", "+", "w"}], ")"}]}]]], "+", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                FractionBox[
                 RowBox[{"2", " ", "\[Pi]", " ", 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox["B", "2"], "-", 
                    SuperscriptBox["w", "2"]}]]}], "w"]], " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 FractionBox["B", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"B", "-", "w"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"B", "+", "w"}], ")"}]}]]]}], ")"}]}]}], ")"}]}], 
           "-", 
           RowBox[{"4", " ", "B", " ", 
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              RowBox[{"2", " ", "\[Pi]", " ", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox["B", "2"], "-", 
                 SuperscriptBox["w", "2"]}]]}], "w"]], " ", "w", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{"2", " ", "\[Pi]", " ", 
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["B", "2"], "-", 
                    SuperscriptBox["w", "2"]}]]}], "w"]}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "a"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[ExponentialE]", 
                    FractionBox[
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["B", "2"], "-", 
                    SuperscriptBox["w", "2"]}]]}], "w"]]}], ")"}], " ", "w"}],
                   "+", 
                  RowBox[{"4", " ", "B", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["w", "2"]}], "+", 
                    RowBox[{"B", " ", 
                    RowBox[{"(", 
                    RowBox[{"B", "+", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"B", "-", "w"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"B", "+", "w"}], ")"}]}]]}], ")"}]}]}], ")"}], 
                   " ", 
                   RowBox[{"C", "[", "1", "]"}]}]}], ")"}]}], 
               RowBox[{"4", " ", "B", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["w", "2"], "+", 
                  RowBox[{"B", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "B"}], "+", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"B", "-", "w"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"B", "+", "w"}], ")"}]}]]}], ")"}]}]}], 
                 ")"}]}]]}], ")"}]}]}], ")"}]}]}], ",", 
       RowBox[{"C", "[", "1", "]"}]}], "]"}], "//", "FullSimplify"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"C", "[", "2", "]"}], "==", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{"2", " ", "\[Pi]", " ", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox["B", "2"], "-", 
                 SuperscriptBox["w", "2"]}]]}], "w"]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "a"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["\[ExponentialE]", 
                 FractionBox[
                  RowBox[{"2", " ", "\[Pi]", " ", 
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["B", "2"], "-", 
                    SuperscriptBox["w", "2"]}]]}], "w"]]}], ")"}], " ", "w"}],
              "+", 
             RowBox[{"4", " ", "B", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["w", "2"]}], "+", 
                RowBox[{"B", " ", 
                 RowBox[{"(", 
                  RowBox[{"B", "+", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"B", "-", "w"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"B", "+", "w"}], ")"}]}]]}], ")"}]}]}], ")"}], 
              " ", 
              RowBox[{"(", 
               FractionBox[
                RowBox[{"a", " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   SuperscriptBox["\[ExponentialE]", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{"B", "+", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"B", "-", "w"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"B", "+", "w"}], ")"}]}]]}], ")"}]}], "w"]]}], 
                  ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "B"}], "+", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"B", "-", "w"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"B", "+", "w"}], ")"}]}]]}], ")"}]}], 
                RowBox[{"4", " ", "B", " ", "w", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"B", "-", "w"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"B", "+", "w"}], ")"}]}]]}]], ")"}]}]}], ")"}]}], 
          
          RowBox[{"4", " ", "B", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["w", "2"], "+", 
             RowBox[{"B", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "B"}], "+", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"B", "-", "w"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"B", "+", "w"}], ")"}]}]]}], ")"}]}]}], 
            ")"}]}]]}]}], ",", 
       RowBox[{"C", "[", "2", "]"}]}], "]"}], "//", "FullSimplify"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"w", "=", 
     RowBox[{"Pi", "/", "t"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], "==", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "t"}], " ", 
         RowBox[{"(", 
          RowBox[{"B", "+", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"B", "-", "w"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"B", "+", "w"}], ")"}]}]]}], ")"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"a", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["\[ExponentialE]", 
               FractionBox[
                RowBox[{"\[Pi]", " ", 
                 RowBox[{"(", 
                  RowBox[{"B", "+", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"B", "-", "w"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"B", "+", "w"}], ")"}]}]]}], ")"}]}], "w"]]}], 
             ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "B"}], "+", 
              SqrtBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"B", "-", "w"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"B", "+", "w"}], ")"}]}]]}], ")"}]}], 
           RowBox[{"4", " ", "B", " ", "w", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"B", "-", "w"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"B", "+", "w"}], ")"}]}]]}]], ")"}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", "t", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["B", "2"], "-", 
              SuperscriptBox["w", "2"]}]]}]], " ", 
          RowBox[{"(", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"a", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["\[ExponentialE]", 
                 FractionBox[
                  RowBox[{"\[Pi]", " ", 
                   RowBox[{"(", 
                    RowBox[{"B", "-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"B", "-", "w"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"B", "+", "w"}], ")"}]}]]}], ")"}]}], "w"]]}], 
               ")"}], " ", "w"}], 
             RowBox[{"4", " ", "B", " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["B", "2"], "-", 
                SuperscriptBox["w", "2"], "-", 
                RowBox[{"B", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"B", "-", "w"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"B", "+", "w"}], ")"}]}]]}]}], ")"}]}]]}], 
           ")"}]}]}], ")"}]}]}], "//", "FullSimplify"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"a", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"t", " ", 
           RowBox[{"(", 
            RowBox[{"B", "+", 
             SqrtBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"B", "-", "w"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"B", "+", "w"}], ")"}]}]]}], ")"}]}], "1"]}]], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           FractionBox[
            RowBox[{"t", " ", 
             RowBox[{"(", 
              RowBox[{"B", "+", 
               SqrtBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"B", "-", "w"}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"B", "+", "w"}], ")"}]}]]}], ")"}]}], "1"]]}], "-", 
         
         FractionBox["B", 
          SqrtBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"B", "-", "w"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"B", "+", "w"}], ")"}]}]]], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           FractionBox[
            RowBox[{"2", " ", "t", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["B", "2"], "-", 
               SuperscriptBox["w", "2"]}]]}], "1"]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            FractionBox["B", 
             SqrtBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"B", "-", "w"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"B", "+", "w"}], ")"}]}]]]}], ")"}]}]}], ")"}]}], 
      RowBox[{"4", " ", "B", " ", "w"}]], "//", "FullSimplify"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"a", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"B", "+", 
            SqrtBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"B", "-", 
                FractionBox["\[Pi]", "t"]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"B", "+", 
                FractionBox["\[Pi]", "t"]}], ")"}]}]]}], ")"}]}], " ", "t"}]],
        " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"B", "+", 
              SqrtBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"B", "-", 
                  FractionBox["\[Pi]", "t"]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"B", "+", 
                  FractionBox["\[Pi]", "t"]}], ")"}]}]]}], ")"}], " ", 
            "t"}]]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["B", "2"], "-", 
              FractionBox[
               SuperscriptBox["\[Pi]", "2"], 
               SuperscriptBox["t", "2"]]}]], " ", "t"}]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            FractionBox["B", 
             SqrtBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"B", "-", 
                 FractionBox["\[Pi]", "t"]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"B", "+", 
                 FractionBox["\[Pi]", "t"]}], ")"}]}]]]}], ")"}]}], "-", 
         FractionBox["B", 
          SqrtBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"B", "-", 
              FractionBox["\[Pi]", "t"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"B", "+", 
              FractionBox["\[Pi]", "t"]}], ")"}]}]]]}], ")"}], " ", "t"}], 
      RowBox[{"4", " ", "B", " ", "\[Pi]"}]], "//", "FullSimplify"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"a", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"t", " ", "w"}], "]"}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "B"}], " ", "t"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cosh", "[", 
               RowBox[{"t", " ", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox["B", "2"], "-", 
                  SuperscriptBox["w", "2"]}]]}], "]"}]}], "-", 
             FractionBox[
              RowBox[{"B", " ", 
               RowBox[{"Sinh", "[", 
                RowBox[{"t", " ", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox["B", "2"], "-", 
                   SuperscriptBox["w", "2"]}]]}], "]"}]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"B", "-", "w"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"B", "+", "w"}], ")"}]}]]]}], ")"}]}]}], ")"}]}], 
       RowBox[{"2", " ", "B", " ", "w"}]]}], "//", "FullSimplify"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.632252103201511*^9, 3.632252158778358*^9}, {
  3.6322522208888083`*^9, 3.632252261032836*^9}, {3.632252305559195*^9, 
  3.6322523082741947`*^9}, {3.635441320988866*^9, 3.635441326980978*^9}, {
  3.6354415484811077`*^9, 3.6354417173757153`*^9}},
 FontSize->9,
 Background->RGBColor[0.9, 1, 1]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{"Pi", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"2", "*", "Pi"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"30", "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"\[Pi]", " ", "t"}], "2"]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"15", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SqrtBox["15"], " ", "\[Pi]", " ", "t"}], "]"}]}], "+", 
          RowBox[{
           SqrtBox["15"], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SqrtBox["15"], " ", "\[Pi]", " ", "t"}], "]"}]}]}], ")"}]}]}], 
      RowBox[{"60", " ", 
       SuperscriptBox["\[Pi]", "2"]}]], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"(", 
        RowBox[{"8", "*", 
         RowBox[{"Pi", "/", "w"}]}], ")"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "\"\<First Interval (Dashed)\>\""}], 
     ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Dashed"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"a", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"t", " ", "w"}], "]"}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "B"}], " ", "t"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cosh", "[", 
               RowBox[{"t", " ", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox["B", "2"], "-", 
                  SuperscriptBox["w", "2"]}]]}], "]"}]}], "-", 
             FractionBox[
              RowBox[{"B", " ", 
               RowBox[{"Sinh", "[", 
                RowBox[{"t", " ", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox["B", "2"], "-", 
                   SuperscriptBox["w", "2"]}]]}], "]"}]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"B", "-", "w"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"B", "+", "w"}], ")"}]}]]]}], ")"}]}]}], ")"}]}], 
       RowBox[{"2", " ", "B", " ", "w"}]]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"8", "*", 
        RowBox[{"Pi", "/", "w"}]}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "\"\<Second Interval (Solid)\>\""}]}], 
    "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.632254263533283*^9, 3.632254290138441*^9}, {
   3.632254354479752*^9, 3.632254363017058*^9}, {3.632254401474719*^9, 
   3.632254414882308*^9}, {3.632254637169001*^9, 3.632254697114992*^9}, {
   3.632254742382584*^9, 3.632254745547826*^9}, 3.632255202510631*^9, {
   3.6322553054530573`*^9, 3.6322553092488728`*^9}, {3.635441396994416*^9, 
   3.635441520693746*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJwB4QEe/iFib1JlAgAAAB0AAAACAAAApdQCqw10zj9AnPAPVFuwP7fQMkdH
Hs8/NNQBZnsOsD+O6exILEbPP/266wRU+a8/ZgKnShFuzz/cRR/3vNWvPxY0
G07bvc8/gw3U+bOOrz+7y4Gqty7QP4MPOvRDAa8/Gy9qsUvO0D8Oj2hhVemt
P9r1Or9zDdI/lwCiQGbIqz9GAhhAZiHSP0eozv0ep6s/sg71wFg10j+28qmw
8YWrP4onr8I9XdI/X38fjeZDqz86WSPGB63SP6Cg9wwZwao/mbwLzZtM0z9G
My/t9cCpP1iD3NrDi9Q/9+u43grZpz8Q4CYsZ6HUP1qlHRs9uac/yTxxfQq3
1D+56n4Gm5mnPzr2BSBR4tQ/DO2kadtapz8baS9l3jjVP18Rtpt436Y/3k6C
7/jl1T8NifuhcvGlP5arzECc+9U/MBubTIrUpT9PCBeSPxHWP1YJEhvTt6U/
wMGrNIY81j/kdD9X+X6lP6E01XkTk9Y/BrwKdKAPpT9kGigELkDXP/r8WpOW
OqQ/HHdyVdFV1z84tY8U4iCkP9XTvKZ0a9c/nwmC/mIHpD9GjVFJu5bXPyXZ
Q/QF1aM/JwB7jkjt1z/qxHN61nKjP+btqvJTNNg/gJJ/6Xwmoz/v5uOW
         "]], 
        LineBox[CompressedData["
1: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
i43OzkqQwM2Nd26j/wd3Kje5
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
n+LzPyzfiXlh3breS7cLRJYm2Js+UMCmYy74vEUXSI8ed50m5knP6FK14eUu
ULB/sx3lEvP9umHtkHsX7Poc/pUrgwKzsc9uSjzsgvkGkSnBEAq0kbcUCkZ1
QcDe4tHjfhSocA8eISV3wVEHSienJwWeHLez7y3sAvPZmIrR88S8s4udZnR0
wdOvIssB2yjAfj0oNOFvF7Qm/uJJEqTAv66p2sfTXeBU3RavuJYExWXfwJmn
G85SJfIq25PA0DNQcZ9qN3iwOdZnRCaBUs/E1e1a3VC1xbfhiW8SbDC+QN1g
1A1WbN/iR68mQedu9S1zNt3QbffVWEozCTx7x7jKQrvhm/7spkM9iXD+lNWR
Z/HdkLCtunniYyJo4k/3UjK7QbfBwla6IBG4k7Jm/V51g4a3xIYJ30RIOW3R
p9vfDZ0How4eFUqE2sr3uE6jB+5NGHFNSSQA7ctyX+jRHjB7EGY0shoPD5r3
8Rid7oH329ndr3bEg/ZIikntlR7wyu8/1pMUD2WiXn8rogiWDPEfWhcP+a47
hAsHe2DHOYPZuN44CPO2UnOb6oHJeAnbyjdx4Pwg2mrPag+82nzrjXt0HOxK
WqNnC/eC7dTN9ktacUB936yRqdkL0Szvl+hPYyF+a/DlmJheMMtd6l1RjIGb
8uVPTqf2QuaXe8blq9Fw9r/p/HXZvTA7+smfry4a1htcXArBveDb1vPQxCUa
QjzVIh786wXDJy28VHoU+H0efHUT9UFj86F/39kj4dptA/7zw31wNWw+vf7f
Y8jeImRlPdsH84qfZx94P4bht79y7Uj9cC/T/xqF+zG4sF41ctnQDzrmKrdm
ZB+B55OgJ/c1+kH9yDmGv+lDuJdcxf08pB9OtHyqNUu9D7GVhznIigMwnvTD
tSzRCyq5963lOv+BO7ren5i9dljeRLn08a0/EHLB0Gft0GUckbLH9er9P6At
IZqwOfYqvvjf7s7tCX/AZU1Y66aBM161lMGJ1X+gsdvs1SfL61g9f+O94C2D
8F+DwreZn3dw0bmlVbuPg7AvOlbCYuAhFk9fKNFqHIRicbUAQ99gfH9ozmVb
5yCY98oFrN/wCJ/2m+5onR6ECw9NliW1HuNx5kj5Kcm/IKMtcHIwPgQrrnTe
Ba+/kJbm1nYqJQLTMqtXN8v+gyK/g9e8JWOx2wOTblD6Bw5n1z0Uto3Fh670
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
k0ZPp+mpv5cfC/X//w9A90drNNLpqb/wD336
         "]]}}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.036000000000000004`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 4}, {0.03740301466294671, 0.06389356030614213}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox["\"First Interval (Dashed)\"", TraditionalForm]}, {
        FormBox["\"Second Interval (Solid)\"", TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.632254698442192*^9, 3.632254758218916*^9, 3.632255204617567*^9, 
   3.6322553292410183`*^9, {3.6354413988135233`*^9, 3.63544140498181*^9}, {
   3.635441479589056*^9, 3.635441521482436*^9}},
 Background->RGBColor[0.9, 1, 1]]
}, Open  ]]
},
WindowSize->{1235, 813},
WindowMargins->{{6, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (June 27, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 274, 9, 122, "Text"],
Cell[835, 31, 583, 16, 62, "Input"],
Cell[CellGroupData[{
Cell[1443, 51, 798, 21, 62, "Input"],
Cell[2244, 74, 355, 10, 47, "Output"]
}, Open  ]],
Cell[2614, 87, 1512, 46, 62, "Input"],
Cell[CellGroupData[{
Cell[4151, 137, 2865, 71, 113, "Input"],
Cell[7019, 210, 342, 12, 65, "Output"],
Cell[7364, 224, 510, 19, 65, "Output"]
}, Open  ]],
Cell[7889, 246, 807, 23, 62, "Input"],
Cell[CellGroupData[{
Cell[8721, 273, 6228, 166, 555, "Input"],
Cell[14952, 441, 998, 17, 24, "Message"],
Cell[15953, 460, 933, 25, 55, "Output"],
Cell[16889, 487, 53331, 994, 216, "Output"]
}, Open  ]],
Cell[70235, 1484, 2856, 70, 130, "Input"],
Cell[CellGroupData[{
Cell[73116, 1558, 2746, 83, 215, "Input"],
Cell[75865, 1643, 59507, 1044, 247, "Output"]
}, Open  ]],
Cell[135387, 2690, 1985, 37, 113, "Input"],
Cell[137375, 2729, 2077, 49, 96, "Input"],
Cell[139455, 2780, 3614, 104, 232, "Input"],
Cell[143072, 2886, 20154, 564, 776, "Input"],
Cell[CellGroupData[{
Cell[163251, 3454, 3427, 95, 244, "Input"],
Cell[166681, 3551, 42399, 714, 262, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
